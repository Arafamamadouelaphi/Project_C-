// <auto-generated />
using System;
using BowlingEF.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BowlingEF.Migrations
{
    [DbContext(typeof(BowlingContext))]
    [Migration("20221025144845_myMigration")]
    partial class myMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.10");

            modelBuilder.Entity("BowlingEF.Entities.EquipeEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Equipes");
                });

            modelBuilder.Entity("BowlingEF.Entities.FrameEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Lancer1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Lancer2")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Lancer3")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Numero")
                        .HasColumnType("INTEGER");

                    b.Property<long>("PartieId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PartieId");

                    b.ToTable("Frames");
                });

            modelBuilder.Entity("BowlingEF.Entities.JoueurEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("EquipeEntityId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Pseudo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EquipeEntityId");

                    b.ToTable("Joueurs");
                });

            modelBuilder.Entity("BowlingEF.Entities.PartieEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<long>("JoueurForeignKey")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Score")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("JoueurForeignKey");

                    b.ToTable("Parties");
                });

            modelBuilder.Entity("BowlingEF.Entities.FrameEntity", b =>
                {
                    b.HasOne("BowlingEF.Entities.PartieEntity", "Partie")
                        .WithMany("Frames")
                        .HasForeignKey("PartieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Partie");
                });

            modelBuilder.Entity("BowlingEF.Entities.JoueurEntity", b =>
                {
                    b.HasOne("BowlingEF.Entities.EquipeEntity", null)
                        .WithMany("Joueurs")
                        .HasForeignKey("EquipeEntityId");
                });

            modelBuilder.Entity("BowlingEF.Entities.PartieEntity", b =>
                {
                    b.HasOne("BowlingEF.Entities.JoueurEntity", "Joueur")
                        .WithMany("PartieEntities")
                        .HasForeignKey("JoueurForeignKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Joueur");
                });

            modelBuilder.Entity("BowlingEF.Entities.EquipeEntity", b =>
                {
                    b.Navigation("Joueurs");
                });

            modelBuilder.Entity("BowlingEF.Entities.JoueurEntity", b =>
                {
                    b.Navigation("PartieEntities");
                });

            modelBuilder.Entity("BowlingEF.Entities.PartieEntity", b =>
                {
                    b.Navigation("Frames");
                });
#pragma warning restore 612, 618
        }
    }
}
